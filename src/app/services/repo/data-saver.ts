import * as fs from 'fs'
import path from 'path'
import { GPSCollector } from '../../shared/types/t-gps-collector'
import { MyGeoJSON } from '../../shared/types/t-my-geo-json'
import { OBDCollector } from '../../shared/types/t-obd-collector'

export class DataSaver {
  private fs: typeof fs
  private path: typeof path
  private gps: any
  private obd: any
  private intervalId: any

  private collectedOBDData: OBDCollector[] = []
  private collectedGPSData: MyGeoJSON = { type: 'LineString', coordinates: [] }

  private filenameGJSON: string = new Date().toISOString().replace(/[ &\/\\#,+()$~%.'":*?<>{}]/g, '-') + '.geo.json'
  private filenameOBD: string = new Date().toISOString().replace(/[ &\/\\#,+()$~%.'":*?<>{}]/g, '-') + '.obd.json'

  constructor(_fs: typeof fs, _path: typeof path, private appPath: string, private devmode: boolean = false) {
    this.fs = _fs
    this.path = _path
  }

  public init(gps: any, obd: any) {
    this.gps = gps
    this.obd = obd
    this.gps.stdout.on('data', (data: string) => {
      data.split('\n').forEach(d => {
        if (d) {
          if (this.devmode) console.log('DATA SAVER GPS:', d)
          const parsedData = JSON.parse(d) as GPSCollector
          if (parsedData.lon) this.collectedGPSData.coordinates.push([parsedData.lon, parsedData.lat])
        }
      })
    })
    this.obd.stdout.on('data', (data: string) => {
      data.split('\n').forEach(d => {
        if (d) {
          if (this.devmode) console.log('DATA SAVER OBD:', d)
          const parsedData = JSON.parse(d) as OBDCollector
          parsedData.time = new Date().toISOString()
          this.collectedOBDData.push(parsedData)
        }
      })
    })
    this.saveData()
    this.intervalId = setInterval(() => this.saveData(this), 30000)
  }

  public kill(): void {
    clearInterval(this.intervalId)
  }

  public getGPSData(): MyGeoJSON {
    if (this.devmode) console.log(this.collectedGPSData)
    return this.collectedGPSData.coordinates.length > 0 ? this.collectedGPSData :
      {
        type: 'LineString',
        coordinates: [
          [18.882160833333334, 47.780973],
          [18.882160833333334, 47.780973],
          [18.88216, 47.780973833333334],
          [18.88216, 47.780973833333334],
          [18.88216, 47.780973833333334],
          [18.882157833333334, 47.78097616666667],
          [18.882157833333334, 47.78097616666667],
          [18.882157833333334, 47.78097616666667],
          [18.882157166666666, 47.78097666666667],
          [18.882157166666666, 47.78097666666667],
          [18.882157166666666, 47.78097666666667],
          [18.882157, 47.780976333333335],
          [18.882157, 47.780976333333335],
          [18.882157, 47.780976333333335],
          [18.8821565, 47.78097616666667],
          [18.8821565, 47.78097616666667],
          [18.8821565, 47.78097616666667],
          [18.882156333333334, 47.78097616666667],
          [18.882156333333334, 47.78097616666667],
          [18.882156333333334, 47.78097616666667],
          [18.882154833333335, 47.780977],
          [18.882154833333335, 47.780977],
          [18.882154833333335, 47.780977],
          [18.882153666666667, 47.78097733333333],
          [18.882153666666667, 47.78097733333333],
          [18.882153666666667, 47.78097733333333],
          [18.882152666666666, 47.78097866666667],
          [18.882152666666666, 47.78097866666667],
          [18.882152666666666, 47.78097866666667],
          [18.882152166666668, 47.780978833333336],
          [18.882152166666668, 47.780978833333336],
          [18.882152166666668, 47.780978833333336],
          [18.882151333333333, 47.78097966666667],
          [18.882151333333333, 47.78097966666667],
          [18.882151333333333, 47.78097966666667],
          [18.88215, 47.780980666666665],
          [18.88215, 47.780980666666665],
          [18.88215, 47.780980666666665],
          [18.882148666666666, 47.78098116666666],
          [18.882148666666666, 47.78098116666666],
          [18.882148666666666, 47.78098116666666],
          [18.882147333333332, 47.78098283333333],
          [18.882147333333332, 47.78098283333333],
          [18.882147333333332, 47.78098283333333],
          [18.882146333333335, 47.780984],
          [18.882146333333335, 47.780984],
          [18.882146333333335, 47.780984],
          [18.8821455, 47.780984833333335],
          [18.8821455, 47.780984833333335],
          [18.8821455, 47.780984833333335],
          [18.882143666666668, 47.7809865],
          [18.882143666666668, 47.7809865],
          [18.882143666666668, 47.7809865],
          [18.882142166666668, 47.78098816666667],
          [18.882142166666668, 47.78098816666667],
          [18.882142166666668, 47.78098816666667],
          [18.882140333333332, 47.78099],
          [18.882140333333332, 47.78099],
          [18.882140333333332, 47.78099],
          [18.8821395, 47.780990833333334],
          [18.8821395, 47.780990833333334],
          [18.8821395, 47.780990833333334],
          [18.882138833333332, 47.780991666666665],
          [18.882138833333332, 47.780991666666665],
          [18.882138833333332, 47.780991666666665],
          [18.882138666666666, 47.780992166666664],
          [18.882138666666666, 47.780992166666664],
          [18.882138666666666, 47.780992166666664],
          [18.882138333333334, 47.780992],
          [18.882138333333334, 47.780992],
          [18.882138333333334, 47.780992],
          [18.882137833333335, 47.78099233333333],
          [18.882137833333335, 47.78099233333333],
          [18.882137833333335, 47.78099233333333],
          [18.882137166666666, 47.780993],
          [18.882137166666666, 47.780993],
          [18.882137166666666, 47.780993],
          [18.882136666666668, 47.78099366666667],
          [18.882136666666668, 47.78099366666667],
          [18.882136666666668, 47.78099366666667],
          [18.882136666666668, 47.78099533333334],
          [18.882136666666668, 47.78099533333334],
          [18.882136666666668, 47.78099533333334],
          [18.882137333333333, 47.780997],
          [18.882137333333333, 47.780997],
          [18.882137333333333, 47.780997],
          [18.882140166666666, 47.78099683333333],
          [18.882140166666666, 47.78099683333333],
          [18.882140166666666, 47.78099683333333],
          [18.882146833333334, 47.780998833333335],
          [18.882146833333334, 47.780998833333335],
          [18.882146833333334, 47.780998833333335],
          [18.882159333333334, 47.78100516666667],
          [18.882159333333334, 47.78100516666667],
          [18.882159333333334, 47.78100516666667],
          [18.882176166666667, 47.78101183333333],
          [18.882176166666667, 47.78101183333333],
          [18.882176166666667, 47.78101183333333],
          [18.882189166666667, 47.781016],
          [18.882189166666667, 47.781016],
          [18.882189166666667, 47.781016],
          [18.8822015, 47.781019],
          [18.8822015, 47.781019],
          [18.8822015, 47.781019],
          [18.882213833333335, 47.781023833333336],
          [18.882213833333335, 47.781023833333336],
          [18.882213833333335, 47.781023833333336],
          [18.8822265, 47.78102783333333],
          [18.8822265, 47.78102783333333],
          [18.8822265, 47.78102783333333],
          [18.882233, 47.781028666666664],
          [18.882233, 47.781028666666664],
          [18.882233, 47.781028666666664],
          [18.882234333333333, 47.78102766666667],
          [18.882234333333333, 47.78102766666667],
          [18.882234333333333, 47.78102766666667],
          [18.882234666666665, 47.78102633333334],
          [18.882234666666665, 47.78102633333334],
          [18.882234666666665, 47.78102633333334],
          [18.882235, 47.781025666666665],
          [18.882235, 47.781025666666665],
          [18.882235, 47.781025666666665],
          [18.882235333333334, 47.78102466666667],
          [18.882235333333334, 47.78102466666667],
          [18.882235333333334, 47.78102466666667],
          [18.882235833333333, 47.781023166666664],
          [18.882235833333333, 47.781023166666664],
          [18.882235833333333, 47.781023166666664],
          [18.882236666666667, 47.781022166666666],
          [18.882236666666667, 47.781022166666666],
          [18.882236666666667, 47.781022166666666],
          [18.882237333333332, 47.781021333333335],
          [18.882237333333332, 47.781021333333335],
          [18.882237333333332, 47.781021333333335],
          [18.882238333333333, 47.781020166666664],
          [18.882238333333333, 47.781020166666664],
          [18.882238333333333, 47.781020166666664],
          [18.88223916666667, 47.78101866666667],
          [18.88223916666667, 47.78101866666667],
          [18.88223916666667, 47.78101866666667],
          [18.882239333333334, 47.78101783333334],
          [18.882239333333334, 47.78101783333334],
          [18.882239333333334, 47.78101783333334],
          [18.882239833333333, 47.78101683333333],
          [18.882239833333333, 47.78101683333333],
          [18.882239833333333, 47.78101683333333],
          [18.882239833333333, 47.781016666666666],
          [18.882239833333333, 47.781016666666666]
        ]
      }
  }

  public saveData(self = this) {
    const obdFolder = self.path.join(self.appPath, 'obd')
    const gjsonFolder = self.path.join(self.appPath, 'gjson')
    if (!self.fs.existsSync(obdFolder)) self.fs.mkdirSync(obdFolder)
    if (!self.fs.existsSync(gjsonFolder)) self.fs.mkdirSync(gjsonFolder)

    const obdPath = self.path.join(obdFolder, self.filenameOBD)
    const gjsonPath = self.path.join(gjsonFolder, self.filenameGJSON)

    self.fs.writeFile(obdPath, JSON.stringify(self.collectedOBDData), { flag: 'w' }, (err) => { if (err) console.log(err) }) //, 'OBD WRITEFILE:', obdPath)})
    self.fs.writeFile(gjsonPath, JSON.stringify(self.collectedGPSData), { flag: 'w' }, (err) => { if (err) console.log(err) }) //, 'GJSON WRITEFILE:', gjsonPath)})

  }
}
